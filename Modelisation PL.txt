class Sequence
    {
    String name();
    int size();
    char base(int i);
    }

/** FASTA : contient 23 sequences */
class FastaIndexFiles
    {
    RefSequence[] getSequence();
    }

class RefSequence extends Sequence
    {
    }


class SliceSequence extends Sequence
    {
    RefSequence ref;
    int start;
    int end;
    int strand;
    //Mutation mutations;

    hash[postion]='T';

    char base(int i)
        {
        char c= ref.at(start+i);
        if(mutations  contains something at i)
            {
            c=mutations[i];
            }
        return c;
        }
    }


class Fastq extends Sequence
    {
    SliceSequence seq[];//0-1

    write()
        {
        for(SliceSequence s:seq)
            {
            for(i=0;i< s.size();++i) out.write(s.at(i));
            }
        }
    }

class MutationMaker
    {
    Mutation create();
    }


class SlicePeeker
    {
    .../ref genome
    .../ref aav
    create();...
    }

class SlicePeeker2
    {
    .../ref genome
    .../ref aav
    create();...
    }


class Isis
    {
    FastaIndexFiles aavGenome;
    FastaIndexFiles mm10Genomes;
    SlicePeeker peeker;

    peekOnSlice()
        {
        swithc(config)
            {
            retr
            }
        }
    Jonction createJonction()
        {
        SliceSequence s1=peekOneSequence();
        SliceSequence s2=peekOneSequence();
        (...)
        return ...:
        }

    run()
        {
        for(;;)
            {
            Jonction j=createJonction();
            }
        }
    }
