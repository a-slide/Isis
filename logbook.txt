2014 04 22

+ QualGenerator
Implementation d'une classe accessoire permetant de generer des listes de score de qualité.
Un pattern modèle et determiné à l'instanciation de la classe (mean, min et max pour chaque position) à partir de paramètres donnés par l'utilisateur pour le départ, le premier quart, le milieu, le troisième quart et la fin. Pour chaque zone il faut fournir la moyenne et la sd

A partir de ce patern, l'objet peut être appelé pour generer des listes de score de qualité suivant suivant le patern (coefficient d'attraction à la moyenne) mais avec une une part stochastique suivant une distribution Gaussienne centrée sur de 0 en variant dans l'interval min, max autorisé

Ci dessous voici le script utilisé pour tester le programme.

	from QualGenerator import QualGenerator
	q = QualGenerator(100, 30,35,37,35,20, 10,4,2,6,20, 0,15,25,25,35)

	with (open("test.csv", "w")) as file:
 	   for i in range (10):
 	       s =""
 	       for i in q.random_qual_string():
  	          s += "{};".format(i)
		file.write(s+"\n")

Quelques modifications ont été apporté par la suite pour ne plus travailler en interval mais plutôt en sd directement.
D'autre part, j'ai simplifié considérablement les paramètre à passer pour instancier la classe. Il s'agit desormais d'indiquer si on souhaite une qualité : "very good", "good", "medium", "bad", "very bad". Les paramètre de chaque catégorie de qualité sont inclus en dur dans la classe.


2014 04 23

